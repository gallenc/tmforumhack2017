version: '2'

services:
  db_data:
    image: tianon/true
    volumes:
        - ./postgres-data:/var/lib/postgresql/data
        
  database:
    container_name: database
    image: postgres:9.6.1
    env_file:
      - .postgres.env
    ports:
      - "5433:5432" # 5433 to avoid clash
    depends_on:
      - db_data
    volumes_from:
      - db_data:rw
 #   networks:
 #       - opennms-airwatch-network
      
  opennms_data:
    image: tianon/true
    volumes:
        - /var/log/opennms
        - /var/opennms/rrd
        - /var/opennms/reports
       # - /opt/opennms/etc
       
  opennms:
    #image: opennms/horizon-core-web:20.1.0-1
    image: opennms/horizon-core-web:20.0.0-1
    container_name: opennms
    env_file:
      - .opennms.env
      - .postgres.env
    depends_on:
      - database
      - opennms_data
      - cassandra
    volumes_from:
      - opennms_data:rw
    volumes:
      - ./opennms-etc:/opt/opennms/etc
      - ./opennms-etc:/opt/opennms/deploy
      - ./opennms-logs:/opt/opennms/logs
    command: ["-s"]
    ports:
      - "8980:8980"
      - "18980:18980"
      - "1099:1099"
      - "8101:8101"
      - "61616:61616"
      - "5817:5817"
      - "162:162/udp"
 #   networks:
 #     - opennms-airwatch-network

  pris:
    container_name: pris
    image: opennms/pris:1.1.5
    ports:
      - "8000:8000"
    volumes:
      - ./pris-requisitions:/opt/opennms-pris/requisitions
#    networks:
#        - opennms-airwatch-network
      
  grafana:
    container_name: grafana
    image: grafana/grafana:4.1.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./grafana-data:/var/lib/grafana
      - ./grafana-plugins:/var/lib/grafana/plugins
    env_file:
      - .grafana.env
    ports:
      - "3000:3000"
#    networks:
#        - opennms-airwatch-network

# see https://hub.docker.com/r/_/cassandra/      
# see https://github.com/JasonGiedymin/docker-cassandra-cluster

  cassandra_data:
    image: tianon/true
    volumes:
       - ./cassandra-data:/var/lib/cassandra
       
  cassandra:
    container_name: cassandra
    image: cassandra:3.10
    command: /bin/bash -c "sleep 1 && echo ' -- Pausing to let system catch up ... -->' && /docker-entrypoint.sh cassandra -f"
    volumes_from:
       -  cassandra_data:rw
    ports:
       - "7000:7000"
       - "7001:7001"
       - "9042:9042"
       - "9160:9160"
       - "7199:7199"
#    networks:
#        - opennms-airwatch-network
    

  # KARAF 1 IS ACTIVE MQ / MQTT BROKER
  # from https://hub.docker.com/r/mkroli/karaf/
  karaf1:
      container_name: karaf1
      image: mkroli/karaf:4.0 # 4.1 docker image broken
      container_name: karaf1
      ports:
        - "11099:1099"
        - "14444:44444"
        - "18101:8101" # ssh consol
        - "18181:8181" # web consol
        - "1883:1883"  # active mq mqtt
      volumes:
        - ./karaf1/karaf-deploy:/deploy
        - ./karaf1/karaf-log:/opt/karaf/data/log
        - ./karaf1/karaf-config/org.ops4j.pax.logging.cfg:/opt/karaf/etc/org.ops4j.pax.logging.cfg
        - ./karaf1/karaf-config/org.ops4j.pax.url.mvn.cfg:/opt/karaf/etc/org.ops4j.pax.url.mvn.cfg
        - ./karaf1/karaf-config/activemq.xml:/opt/karaf/etc/activemq.xml
        
      #  - ./karaf-etc:/opt/karaf/etc
      #  - ./karaf-data:/opt/karaf/data
      # restart: always
      env_file:
        - karaf1/.karaf.env
#      networks:
#        - opennms-airwatch-network
      entrypoint: /opt/karaf/bin/karaf

      
#networks:
#    opennms-airwatch-network:
#      driver: bridge
      
# data container for nexus - remember to remove if no longer needed (docker volume ls -f dangling=true) 
# docker volume prune
# note not using host volume because need to change owner id to 200


